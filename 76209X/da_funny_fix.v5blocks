{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_q-VWs11Wff6:un(.X8-\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">local_x</variable><variable type=\"\" id=\"tE6#^t;Cp$x-HEq?L)_*\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">local_y</variable><variable type=\"\" id=\"vB.;B*TW4}Mo^Yx2a(9f\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">distance_drive</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" deletable=\"false\" x=\"730\" y=\"-570\"><next><block type=\"v5_variables_set_variable\" id=\"0MEb=o^@Ou.];Q,1$.Fd\"><field name=\"VARIABLE\" id=\"_q-VWs11Wff6:un(.X8-\" variabletype=\"\">local_x</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"I*ks8WssN^TF#f1Pa?D5\"><field name=\"NUM\">-1340</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"CD+Z7,)Nb*QH*TEYrP!V\"><field name=\"VARIABLE\" id=\"tE6#^t;Cp$x-HEq?L)_*\" variabletype=\"\">local_y</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"+b_pfJds@F)$l1FI{)Ym\"><field name=\"NUM\">1450</field></shadow></value><next><block type=\"v5_looks_print\" id=\"=3G+F+6UttbZDQlkk`D+\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"Oeu[Puz4hq%YHS$1znM.\"><field name=\"TEXT\">Calibrate Gyro:</field></shadow></value><next><block type=\"v5_sensing_calibrate_gyro\" id=\"M1GreP?|SFtH2bIC:N}6\"><field name=\"GYRO\">GyroA</field><next><block type=\"v5_looks_next_row\" id=\"Y;lT6O`wkV?0qVg89jl|\"><field name=\"TARGET\">Brain</field><next><block type=\"procedures_call\" id=\"k#)BkOFTVX7/9}=MLDdB\"><mutation proccode=\"Goto %n x %n y\" proceduredefid=\"+PDoqXHb?@~0xDx+%q]N\" argumentids=\"[&quot;0yom,sRBQFM{6N+HeEGy&quot;,&quot;vc%Tp[_F3jVz?tmlT^@}&quot;]\" warp=\"false\"></mutation><value name=\"0yom,sRBQFM{6N+HeEGy\"><shadow type=\"math_number\" id=\"@{pRARvAyYCk:}Hc,!!g\"><field name=\"NUM\">0</field></shadow></value><value name=\"vc%Tp[_F3jVz?tmlT^@}\"><shadow type=\"math_number\" id=\"?deVC]Fw.HR^_F].k+-x\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"procedures_call\" id=\"Pc7zJ}iar/w-^GMG3G3(\"><mutation proccode=\"Goto %n x %n y\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\" argumentids=\"[&quot;0yom,sRBQFM{6N+HeEGy&quot;,&quot;vc%Tp[_F3jVz?tmlT^@}&quot;]\" warp=\"false\"></mutation><value name=\"0yom,sRBQFM{6N+HeEGy\"><shadow type=\"math_number\" id=\"%-F0MW:@wPyWjR4hcFKO\"><field name=\"NUM\">1000</field></shadow></value><value name=\"vc%Tp[_F3jVz?tmlT^@}\"><shadow type=\"math_number\" id=\":4xo(lS))~*Pi:KM/K*T\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"procedures_call\" id=\"9vq0O;W:JY){m;_0W`@+\"><mutation proccode=\"Goto %n x %n y\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\" argumentids=\"[&quot;0yom,sRBQFM{6N+HeEGy&quot;,&quot;vc%Tp[_F3jVz?tmlT^@}&quot;]\" warp=\"false\"></mutation><value name=\"0yom,sRBQFM{6N+HeEGy\"><shadow type=\"math_number\" id=\"ssA|*z7]|)rg4f13q_hB\"><field name=\"NUM\">-1000</field></shadow></value><value name=\"vc%Tp[_F3jVz?tmlT^@}\"><shadow type=\"math_number\" id=\"=[`tHvF!NOK)q/?YeJ-^\"><field name=\"NUM\">1000</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"procedures_definition\" id=\"ykIfKY%!;?t#3W7xo}wB\" x=\"1430\" y=\"-550\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"fPl;l=t^DNd3Ju()%?/p\"><mutation proccode=\"Goto %n x %n y\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\" argumentids=\"[&quot;0yom,sRBQFM{6N+HeEGy&quot;,&quot;vc%Tp[_F3jVz?tmlT^@}&quot;]\" argumentnames=\"[&quot;target_x&quot;,&quot;target_y&quot;]\" argumentdefaults=\"[&quot;todo&quot;,&quot;todo&quot;,&quot;todo&quot;,&quot;todo&quot;,&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;,&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"0yom,sRBQFM{6N+HeEGy\"><shadow type=\"argument_reporter_number\" id=\"=W8x5;Xz3KLf!Yu|;C|8\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"0yom,sRBQFM{6N+HeEGy\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_x</field></shadow></value><value name=\"vc%Tp[_F3jVz?tmlT^@}\"><shadow type=\"argument_reporter_number\" id=\"dWvEN?F^S[Ms$0ZqW5V(\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"vc%Tp[_F3jVz?tmlT^@}\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_y</field></shadow></value></shadow></statement><next><block type=\"v5_looks_clear_all_rows\" id=\"HO^QMNv^#-=HAM$Pn76P\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_cursor\" id=\"/#KY2l$V4J3WWO!CJ:@g\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"#E[g=VApg;1Uo%NG~;yM\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\";s@t/6{|j6.Stc7vj3sS\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"Y-1(9E6CnUXatmTJl{UN\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"|5~P}IL_Z,1OJ-N2Qdn!\"><field name=\"TEXT\">I am at x:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"V,^).;`D=sJP$@wR[o=G\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"gD_?IZEuElvr*I`~/|si\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_variables_variable\" id=\"I1@sMJ8i]sQJX}d.#g@G\"><field name=\"VARIABLE\" id=\"_q-VWs11Wff6:un(.X8-\" variabletype=\"\">local_x</field></block></value><next><block type=\"v5_looks_print\" id=\".`yDQul)a~Z5GM.`+^zd\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"5qWQz0D[[JoTW)!cg];+\"><field name=\"TEXT\"> and y: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"3VwW2%4nx^?-(mI]sdlS\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"1eT*xD*sr=DS#tqd-v))\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_variables_variable\" id=\"N}56AcoQ26X,_[Ev)z+E\"><field name=\"VARIABLE\" id=\"tE6#^t;Cp$x-HEq?L)_*\" variabletype=\"\">local_y</field></block></value><next><block type=\"v5_looks_next_row\" id=\"vu_RvDJ|q9QKBw_%S:W5\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"*gp6#[XnC}8;x38L0q~H\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"@W%e}n:F2rN;i8NK_x]H\"><field name=\"TEXT\">I guess I have to go to x: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"@o]TM|)b6V`ZX+6=;blk\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\")KS^)6j-?e)qnES=_jor\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"argument_reporter_number\" id=\";6H0C`eKTfA:D8bgfmxR\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"0yom,sRBQFM{6N+HeEGy\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_x</field></block></value><next><block type=\"v5_looks_print\" id=\"=zkntz-BaYE:g^z#R;*k\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"9=]5fNtIjW;fOLP#89XR\"><field name=\"TEXT\"> and y: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"afhI%oa=F!,gBN~Rg0Em\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"Jo4lo(:$sO0[cQ1AXvmp\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"argument_reporter_number\" id=\"vra;w4dFBMM%)N3V.tTv\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"vc%Tp[_F3jVz?tmlT^@}\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_y</field></block></value><next><block type=\"v5_looks_next_row\" id=\"[MB**8ZfNgg2_4pv`%d^\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"qU*Epy4KdH3pDE.,5,aB\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"`h8}:WG%+-c|@Fq)YA/M\"><field name=\"TEXT\">Calculated distance: </field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"`@_0;XNl;n4w|m=P:j)J\"><field name=\"VARIABLE\" id=\"vB.;B*TW4}Mo^Yx2a(9f\" variabletype=\"\">distance_drive</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"%$LxL{4f!UdL1RvmJ0)#\"><field name=\"NUM\">200</field></shadow><block type=\"v5_operator_function\" id=\"N=CgYT=qe*4X25Aj8G|E\"><field name=\"OPERATOR\">sqrt</field><value name=\"NUM\"><shadow type=\"math_number\" id=\"!V089H7:ycA5nYm_g2,R\"><field name=\"NUM\">200</field></shadow><block type=\"v5_operator_add\" id=\"Ot@$pY=$W]fv85,}swIg\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"e#@EtFc8;8*c/.Y2RpfP\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_multiply\" id=\"nNH%k@)Y[?g),os[hZ@0\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"~0vo@0bda.r`xmiJjUOI\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_subtract\" id=\"__V3Be|f`7RD(~Cz%/;e\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"H8@_D8:Kw[5?nc;58KnY\"><field name=\"NUM\"></field></shadow><block type=\"argument_reporter_number\" id=\"DJVXZ`Km~KEVw7^{$74T\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"0yom,sRBQFM{6N+HeEGy\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_x</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"x$$=XVhNg.]|@J-9F4^Q\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"B`c]!TjI`n]ED+!#@%R+\"><field name=\"VARIABLE\" id=\"_q-VWs11Wff6:un(.X8-\" variabletype=\"\">local_x</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"%B,CxNYrWHqC:t7R8Dy8\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_subtract\" id=\"o!MwOwiK6P_ZiATsks^b\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"XSlVdY,PF:{m:s_^lu^,\"><field name=\"NUM\"></field></shadow><block type=\"argument_reporter_number\" id=\"c@Pf!4_OaPdaxUB0,A!e\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"0yom,sRBQFM{6N+HeEGy\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_x</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"3_@r2~7q%he0ur-X_7g^\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"$FdCXC+.]}xCNOHfi|WC\"><field name=\"VARIABLE\" id=\"_q-VWs11Wff6:un(.X8-\" variabletype=\"\">local_x</field></block></value></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"@$WES~;].~wLr{LUf1Zx\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_multiply\" id=\"J6x*JLkZf:}x?P|nois!\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"35/`@L(aKXMqoY6:k0{e\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_subtract\" id=\"D%veA.;`KU[;k]8-*bHL\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"ER~G.Qy^@Rbe:_MluwFw\"><field name=\"NUM\"></field></shadow><block type=\"argument_reporter_number\" id=\"]iu)H[Rn#c~P=0YY=2CT\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"vc%Tp[_F3jVz?tmlT^@}\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_y</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"3%h_k)d8fG,CiX3L:p?L\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"RFAg(nqRuxxZ8aju6d_5\"><field name=\"VARIABLE\" id=\"tE6#^t;Cp$x-HEq?L)_*\" variabletype=\"\">local_y</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"c1/lpJ-;L.wM{}MbO4i0\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_subtract\" id=\".W/Uwu/Ql}aITN+l}*NC\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"l{+4ggFPin-?nhzgPkbm\"><field name=\"NUM\"></field></shadow><block type=\"argument_reporter_number\" id=\"oA2]Mstb7DQi*:guE4Tw\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"vc%Tp[_F3jVz?tmlT^@}\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_y</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"6N]G^wdN#*7/V=fq+C1Q\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\")6Rqbu-%dAtuUq/oJSZv\"><field name=\"VARIABLE\" id=\"tE6#^t;Cp$x-HEq?L)_*\" variabletype=\"\">local_y</field></block></value></block></value></block></value></block></value></block></value><next><block type=\"v5_looks_print\" id=\"yvSv$d+|G!_|9Tf(.e{B\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"X*K(npV+M#1kMWA0/)^a\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_variables_variable\" id=\"tbsbGESS`G]S?(`ZvfpJ\"><field name=\"VARIABLE\" id=\"vB.;B*TW4}Mo^Yx2a(9f\" variabletype=\"\">distance_drive</field></block></value><next><block type=\"v5_looks_next_row\" id=\"m%iIgUY,x~@.f!h^?n,4\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_drivetrain_drive_for\" id=\"y$KYMK!:^UQ-Mi^TgP+P\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"XDo+RObOWb^9`ol@]Em^\"><field name=\"NUM\">200</field></shadow><block type=\"v5_variables_variable\" id=\"x5uYSWXdbOZhKDcq^_~)\"><field name=\"VARIABLE\" id=\"vB.;B*TW4}Mo^Yx2a(9f\" variabletype=\"\">distance_drive</field></block></value><next><block type=\"v5_variables_change_variable\" id=\"zGqe8ca~I{4}1M_Yzzm%\"><field name=\"VARIABLE\" id=\"_q-VWs11Wff6:un(.X8-\" variabletype=\"\">local_x</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"_yi1O!]@VW,g~~M3Q(-^\"><field name=\"NUM\">1</field></shadow><block type=\"v5_operator_subtract\" id=\"S7M`Y3Ye*@v#WG}/4KgF\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"_+%d!j_2/w|vQ(Cl5+g(\"><field name=\"NUM\"></field></shadow><block type=\"argument_reporter_number\" id=\"o5q/bnRV68up5P:.]-+Z\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"vc%Tp[_F3jVz?tmlT^@}\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_y</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"{?J6j{AwVpZi@=T5:Q}v\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\";9jKG`y7.b{Cw]H6dvQb\"><field name=\"VARIABLE\" id=\"_q-VWs11Wff6:un(.X8-\" variabletype=\"\">local_x</field></block></value></block></value><next><block type=\"v5_variables_change_variable\" id=\"PF/3R:j;D)BsRse$|m^a\"><field name=\"VARIABLE\" id=\"tE6#^t;Cp$x-HEq?L)_*\" variabletype=\"\">local_y</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"[Ebeuo+3VK~Q*3c$xm]/\"><field name=\"NUM\">1</field></shadow><block type=\"v5_operator_subtract\" id=\"iAQi7D(akt/N14ix^^BI\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"5,AnGD=j*P/K{hR*3WDA\"><field name=\"NUM\"></field></shadow><block type=\"argument_reporter_number\" id=\"Jc8)^$(6T:?EDXLKy*}a\"><mutation funcname=\"Goto_target_x_x_target_y_y\" argumentid=\"0yom,sRBQFM{6N+HeEGy\" proceduredefid=\"fPl;l=t^DNd3Ju()%?/p\"></mutation><field name=\"VALUE\">target_x</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"50!xT]N$@H_i*;;TbQ6^\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"cfCt{Lnn|)-a=LHha=]x\"><field name=\"VARIABLE\" id=\"tE6#^t;Cp$x-HEq?L)_*\" variabletype=\"\">local_y</field></block></value></block></value><next><block type=\"v5_looks_print\" id=\"bI29LGj1UV#O$dsQ%:i;\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"SLz602wLZWSoovqX:R;n\"><field name=\"TEXT\">Done!</field></shadow></value><next><block type=\"v5_looks_next_row\" id=\"D;7YhgQ+?[6G38z0,P?e\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_control_wait\" id=\"Z^(p`0nSssQz(-e!wnZW\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"GolLd}$oDB,ED|}TpOw!\"><field name=\"NUM\">3</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"T4`I;X7~qR{9SPQ6py%!\" x=\"730\" y=\"-50\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field><field name=\"EVENTTYPE\">released</field><next><block type=\"v5_motion_stop_motor\" id=\"7!?UqU[#^gkFf(`N7+!Q\"><field name=\"MOTOR\">MotorGroup3</field></block></next></block><block type=\"v5_events_when_controller_button\" id=\"*i@/D#!2J!We;r.:YgjQ\" x=\"730\" y=\"190\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_motion_spin\" id=\"mQL[n9M5XhS#vH{oa_5$\"><field name=\"MOTOR\">MotorGroup3</field><field name=\"DIRECTION\">fwd</field></block></next></block></xml>","rconfig":[{"port":[2,1,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[1],"name":"GyroA","customName":false,"deviceType":"Gyro","deviceClass":"gyro","setting":{},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"tank","id":"primary"},"triportSourcePort":22},{"port":[3,4],"name":"MotorGroup3","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT2, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT1, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\ngyro GyroA = gyro(Brain.ThreeWirePort.A);\ncontroller Controller1 = controller(primary);\nmotor MotorGroup3MotorA = motor(PORT3, ratio36_1, false);\nmotor MotorGroup3MotorB = motor(PORT4, ratio36_1, true);\nmotor_group MotorGroup3 = motor_group(MotorGroup3MotorA, MotorGroup3MotorB);\n\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3\n      // right = Axis2\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position();\n      int drivetrainRightSideSpeed = Controller1.Axis2.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_Goto_target_x_x_target_y_y(double myblockfunction_Goto_target_x_x_target_y_y__target_x, double myblockfunction_Goto_target_x_x_target_y_y__target_y);\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat local_x, local_y, distance_drive;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// User defined function\nvoid myblockfunction_Goto_target_x_x_target_y_y(double myblockfunction_Goto_target_x_x_target_y_y__target_x, double myblockfunction_Goto_target_x_x_target_y_y__target_y) {\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"I am at x:\");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(local_x));\n  Brain.Screen.print(\" and y: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(local_y));\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"I guess I have to go to x: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(myblockfunction_Goto_target_x_x_target_y_y__target_x));\n  Brain.Screen.print(\" and y: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(myblockfunction_Goto_target_x_x_target_y_y__target_y));\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Calculated distance: \");\n  distance_drive = sqrt((myblockfunction_Goto_target_x_x_target_y_y__target_x - local_x) * (myblockfunction_Goto_target_x_x_target_y_y__target_x - local_x) + (myblockfunction_Goto_target_x_x_target_y_y__target_y - local_y) * (myblockfunction_Goto_target_x_x_target_y_y__target_y - local_y));\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(distance_drive));\n  Brain.Screen.newLine();\n  Drivetrain.driveFor(forward, distance_drive, mm, true);\n  local_x = local_x + myblockfunction_Goto_target_x_x_target_y_y__target_y - local_x;\n  local_y = local_y + myblockfunction_Goto_target_x_x_target_y_y__target_x - local_y;\n  Brain.Screen.print(\"Done!\");\n  Brain.Screen.newLine();\n  wait(3.0, seconds);\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  local_x = -1340.0;\n  local_y = 1450.0;\n  Brain.Screen.print(\"Calibrate Gyro:\");\n  GyroA.startCalibration();\n  while (GyroA.isCalibrating()) { task::sleep(50); }\n  Brain.Screen.newLine();\n  myblockfunction_Goto_target_x_x_target_y_y(0.0, 0.0);\n  myblockfunction_Goto_target_x_x_target_y_y(1000.0, 1000.0);\n  myblockfunction_Goto_target_x_x_target_y_y(-1000.0, 1000.0);\n  return 0;\n}\n\n// \"when Controller1 ButtonR2 released\" hat block\nvoid onevent_Controller1ButtonR2_released_0() {\n  MotorGroup3.stop();\n}\n\n// \"when Controller1 ButtonR1 pressed\" hat block\nvoid onevent_Controller1ButtonR1_pressed_0() {\n  MotorGroup3.spin(forward);\n}\n\n\nint main() {\n  // register event handlers\n  Controller1.ButtonR2.released(onevent_Controller1ButtonR2_released_0);\n  Controller1.ButtonR1.pressed(onevent_Controller1ButtonR1_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}